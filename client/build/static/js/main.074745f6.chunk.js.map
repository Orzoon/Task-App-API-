{"version":3,"sources":["helper/helper.js","Component/Home/LoginForm.js","Component/Home/SignupForm.js","Component/Home/Header.js","Component/Home/Footer.js","Component/Home/Home.js","Component/App/TaskList.js","Component/App/CreateTask.js","Component/App/Task.js","Component/App/ProfileEdit.js","Component/App/ErrorComponent.js","Component/App/Mainapp.js","Protected/ProtectedRoute.js","App.js","index.js"],"names":["apiBaseLink","Authentication","loggedIn","isLoggedIn","cookie","getCookie","this","isLoggedOut","now","Date","toUTCString","document","name","value","decodeURIComponent","split","filter","item","splitItem","trim","setCookie","LoginForm","props","state","username","password","redirect","loading","errorMessage","formHandler","bind","signIn","event","target","setState","e","preventDefault","parent","length","data","email","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","token","console","log","loginController","catch","error","message","to","className","TextField","fullWidth","variant","id","label","margin","onChange","type","Button","style","backgroundColor","color","onClick","href","toggleForm","React","Component","SignupFrom","user","confirmPassword","signup","userCopy","userArray","Object","keys","i","err","hasOwnProperty","errors","code","Logo","logo","Header","children","Footer","Link","rel","Home","loginForm","MySwitch","withStyles","switchBase","checked","track","opacity","Switch","EditTask","cols","rows","test","editTaskHandler","taskId","defaultValue","description","TaskList","BtnStyle","background","task","editMode","_id","completed","switchLoading","saveEditHandler","editTask","deleteTask","handleTaskSwitchStatus","Paper","square","LinearProgress","Fragment","Typography","display","gutterBottom","startIcon","Save","Edit","editTaskIndicator","CircularProgress","Delete","CreateTask","onSubmit","addTask","autoFocus","createTask","createDescription","disabled","buttonDisable","Task","inputRef","createRef","tasks","tasksCount","currentCount","limit","skip","tabIndexValue","createTaskHandler","handleTabFilter","count","map","currentTarget","tasksUpdated","errorMessageHandler","toString","tasksCopy","index","findIndex","statusName","trueCheck","toLowerCase","arrayCopy","fetchDataHandler","tabValue","fetchBaseFilter","countno","Tabs","TabIndicatorProps","textColor","centered","Tab","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ref","key","ProfileEdit","handleProfileUpdate","handlePassword","profileSpinner","handleProfileEdit","ErrorComponent","messages","messageArray","Mainapp","toggleRef","profileChange","conformPassword","userLoaded","profileToggle","logoutHandler","toggleHandler","outsideClickhandler","deleteAccountHandler","logoutController","window","addEventListener","removeEventListener","current","contains","authorization","res","confirm","action","messageType","messageCopy","setTimeout","UserInfo","ProtectedRoute","component","rest","render","App","redirectToApp","ok","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.074745f6.chunk.js","sourcesContent":["const apiBaseLink =  'https://task-app-heroku.herokuapp.com';\r\nconst Authentication = { \r\n    loggedIn: false,\r\n    isLoggedIn(){\r\n        let cookie =   getCookie('token')\r\n        if(!cookie || cookie == null){\r\n            return this.loggedIn = false\r\n        }\r\n        return this.loggedIn = true\r\n    },\r\n    isLoggedOut(){\r\n        let now = new Date().toUTCString();\r\n        let path = '/'\r\n        document.cookie = `token=; expires=${now}; path=${path};`;\r\n        this.loggedIn = false;\r\n    }\r\n\r\n}\r\n\r\n\r\nconst getCookie = (name) => {\r\n    let value = '';\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    let cookieArray = decodedCookie.split(';');\r\n    let matched = cookieArray.filter(item => {\r\n        let splitItem = item.split('=');\r\n        if(splitItem[0].trim() === name){\r\n            value = splitItem[1]\r\n            return value\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }) \r\n\r\n    return value\r\n}\r\n\r\nconst setCookie = (name,value) => {\r\n    document.cookie =`${name}=${value}`;\r\n}\r\nexport {getCookie, setCookie, apiBaseLink, Authentication}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport \"../../css/login.scss\";\r\nimport {apiBaseLink,setCookie,Authentication} from '../../helper/helper';\r\nimport {TextField, Button} from '@material-ui/core'\r\n\r\n\r\n\r\nexport default class LoginForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            username: '',\r\n            password: '',\r\n            redirect: null,\r\n            loading: false,\r\n            errorMessage: ''\r\n        }\r\n        this.formHandler = this.formHandler.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n    }\r\n\r\n   formHandler(event){\r\n       const name = event.target.name;\r\n       const value = event.target.value;\r\n       this.setState({\r\n           [name]: value\r\n       })\r\n   }\r\n\r\n   signIn(e){\r\n       this.setState({\r\n           loading: true\r\n       })\r\n        e.preventDefault();\r\n        let parent = this;\r\n        if(this.state.username.length === 0 || this.state.password === 0){\r\n            this.setState({\r\n                loading:false,\r\n                errorMessage: 'please fill up the login form!!'\r\n            })\r\n\r\n            return \r\n        }\r\n        else {\r\n            this.setState({\r\n                errorMessage: ''\r\n            })\r\n        }\r\n        const data = {\r\n            email: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        fetch(apiBaseLink + '/users/login', {\r\n            method: 'POST',\r\n            headers: {'content-type': 'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(response => {\r\n            //handle error  message here\r\n            if(response.status === 400){\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n                throw new Error('please fill in the form correctly!!');\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            if(!data){\r\n                return\r\n            }\r\n            \r\n            setCookie('token', data.token)\r\n            Authentication.isLoggedIn();\r\n            console.log(Authentication.loggedIn)\r\n            parent.setState({\r\n                password: '',\r\n                username: '',\r\n                redirect: true,\r\n                loading:false\r\n            })\r\n            parent.props.loginController();\r\n          \r\n        })\r\n        .catch(error => {\r\n            console.log('error', error)\r\n            parent.setState({\r\n                loading: false,\r\n                errorMessage: error.message\r\n            })\r\n        })\r\n   }\r\n\r\n    render (){\r\n        const style = {\r\n            backgroundColor:\"#1976D2\"\r\n        }\r\n\r\n\r\n        const {redirect} = this.state;\r\n        if(redirect){\r\n          return <Redirect to ='/app' />\r\n        }\r\n        return (\r\n            <div className=\"loginFormContainer\">\r\n                <form className = \"loginForm\">  \r\n                    <div className = \"formHeading\">\r\n                       have account!! :)\r\n                    </div>\r\n                    {(this.state.errorMessage.length !== 0) ? \r\n                            <div className = \"errorMessage\">\r\n                                <p>{this.state.errorMessage}</p>\r\n                            </div> :\r\n                            null\r\n                    }\r\n                    <div className = \"input\">\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            id=\"standard-dense\"\r\n                            label=\"email\"\r\n                            margin=\"dense\"\r\n                            onChange = {this.formHandler}\r\n                            name =\"username\" \r\n                            id=\"username\" \r\n                            type=\"email\" \r\n                        />\r\n                    </div>\r\n                    <div className = \"input\">\r\n                          <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            id=\"password\" \r\n                            type=\"password\" \r\n                            label=\"password\"\r\n                            margin=\"dense\"\r\n                            id=\"password\"  \r\n                            name =\"password\" \r\n                            onChange = {this.formHandler}\r\n                        />\r\n                    </div>\r\n                    <div className = \"btn-login\">\r\n                        <Button\r\n                        style = {style}\r\n                        variant = \"contained\"\r\n                        color =\"primary\"\r\n                        onClick = {this.signIn}\r\n                        > {(this.state.loading) ? '......': 'login'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className = \"signup-link\">\r\n                        <a href = \"/\" onClick = {(e) => {this.props.toggleForm(e)}}>Sign up</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Button, TextField} from '@material-ui/core'\r\nimport {apiBaseLink,setCookie,Authentication} from '../../helper/helper';\r\nimport \"../../css/signup.scss\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class SignupFrom extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            loading: false,\r\n            errorMessage: '',\r\n            redirect:false\r\n        }\r\n        this.formHandler = this.formHandler.bind(this)\r\n        this.signup = this.signup.bind(this)\r\n    }\r\n\r\n    formHandler(e){\r\n        e.preventDefault();\r\n\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        const userCopy = {...this.state.user}\r\n        userCopy[name] = value\r\n        this.setState({\r\n            user: userCopy\r\n        })\r\n    }\r\n\r\n    signup(e){\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        e.preventDefault();\r\n        const userCopy = {...this.state.user}\r\n        const userArray = Object.keys(userCopy);\r\n\r\n        // checking for empty fields\r\n        for(let i = 0 ; i < userArray.length ; i ++){\r\n            if(userCopy[userArray[0]].length === 0){\r\n                this.setState({\r\n                    errorMessage: 'Fields must not be empty',\r\n                    loading: false\r\n                })\r\n\r\n                return \r\n            }\r\n        }\r\n        if(this.state.user.password !== this.state.user.confirmPassword){\r\n            this.setState({\r\n                errorMessage: 'passwords do not match',\r\n                loading: false\r\n            })\r\n            return\r\n        }\r\n        //deleting the property;;\r\n        delete userCopy.confirmPassword;\r\n        const parent = this;\r\n        fetch(apiBaseLink + '/users', {\r\n            method: 'POST',\r\n            headers: {'content-type': 'application/json'},\r\n            body: JSON.stringify(userCopy)\r\n        })\r\n        .then(response => {\r\n            if(response.status === 404){\r\n                return response.json().then(err => { throw err; });\r\n            }else if(response.status === 201){\r\n                return response.json() \r\n            }      \r\n        })\r\n        .then(data => {\r\n            if(!data){\r\n                parent.setState({\r\n                    //errorMessage: error.message,\r\n                    loading: false\r\n                })\r\n                return\r\n            }\r\n            setCookie('token', data.token)\r\n            Authentication.isLoggedIn();\r\n            parent.setState({\r\n                redirect: true,\r\n                loading: false\r\n            })\r\n            parent.props.loginController();\r\n        })\r\n        .catch(error => {\r\n            if(error.hasOwnProperty('errors')){\r\n                if(error.errors.hasOwnProperty('email')){\r\n                    delete error.message\r\n                    error.message = error.errors.email.message\r\n                }else if(error.message = 'password` is shorter than the minimum allowed length (7).'){\r\n                    error.message = 'password` is shorter than the minimum allowed length (7).'\r\n                }\r\n            }\r\n            else if(error.hasOwnProperty('message')) {\r\n                if(error.message.trim() === 'Failed to fetch'){\r\n                    error.message = 'please check your internet connection'\r\n                }\r\n            }\r\n            else if(error.hasOwnProperty('code')){\r\n                if(error.code === 11000){\r\n                    error.message = 'email already exists!!'\r\n                }\r\n            }\r\n            else {\r\n                error.message = 'oops!! something terrible happened!!'\r\n            }\r\n            parent.setState({\r\n                errorMessage: error.message,\r\n                loading: false\r\n            })\r\n        })\r\n\r\n    }\r\n    render (){\r\n        const style = {\r\n            backgroundColor:\"#1976D2\"\r\n        }\r\n        if(this.state.redirect){\r\n            return <Redirect to = '/app' />\r\n        }\r\n        return (\r\n            <div className=\"signupFormContainer\">\r\n                <form className = \"signupForm\">  \r\n                    <div className = \"formHeadingSignup\">\r\n                     create account!! :)\r\n                    </div>\r\n                    {(this.state.errorMessage.length !== 0) ? \r\n                            <div className = \"errorMessage\">\r\n                                <p>{this.state.errorMessage}</p>\r\n                            </div> :\r\n                            null\r\n                    }\r\n                    <div className = \"input\">\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"username\"\r\n                            margin=\"dense\"\r\n                            onChange = {this.formHandler}\r\n                            name =\"name\" \r\n                            id=\"username\" \r\n                            type=\"text\" \r\n                        />\r\n                    </div>\r\n                    <div className = \"input\">\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"email\"\r\n                            margin=\"dense\"\r\n                            onChange = {this.formHandler}\r\n                            name =\"email\" \r\n                            id=\"name\" \r\n                            type=\"email\" \r\n                        />\r\n                    </div>\r\n                    <div className = \"input\">\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            type=\"password\" \r\n                            label=\"password\"\r\n                            margin=\"dense\"\r\n                            id=\"password\"  \r\n                            name =\"password\" \r\n                            onChange = {this.formHandler}\r\n                        />\r\n                    </div>\r\n                    <div className = \"input\">\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            type=\"password\" \r\n                            label=\"conform password\"\r\n                            margin=\"dense\"\r\n                            name =\"confirmPassword\" \r\n                            onChange = {this.formHandler}\r\n                        />\r\n                    </div>\r\n                    <div className = \"btn-signup\">\r\n                        <Button\r\n                        style = {style}\r\n                        variant = \"contained\"\r\n                        color =\"primary\"\r\n                        onClick = {this.signup}\r\n                        > {(this.state.loading) ? '......' : 'signup'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className = \"signup-link\">\r\n                        <a href = \"#\" onClick = {(e) => {this.props.toggleForm(e)}}>login</a>\r\n                    </div>\r\n                </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"../../css/header.scss\";\r\n\r\n//Icons\r\n\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className=\"logoContainer\">\r\n            {props.logo}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default class Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            logo: 'Task App'\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render(){\r\n     \r\n        return(\r\n            <div className =\"headerWrapper\">\r\n             <div className=\"headerContainer\">\r\n                <Logo logo = {this.state.logo} />\r\n                {this.props.children}\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from '@material-ui/core'\r\nimport '../../css/header.scss'\r\n\r\nconst Footer = props => {\r\n    return (<footer className = \"appFooter\">\r\n                <ul className = \"footerUl\">\r\n                    <li>\r\n                        <Link href = \"https://github.com/Orzoon\" color = \"inherit\" target = \"_blank\" rel = \"noopener\">\r\n                            visit my github\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link href = \"https://codepen.io/orzoon\" color = \"inherit\" target = \"_blank\" rel = \"noopener\">\r\n                            visit my codepen\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </footer>)\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n \r\n import LoginForm from './LoginForm';\r\n import SignupForm from './SignupForm';\r\n import Header from './Header';\r\n import Footer from './Footer';\r\n\r\nexport default class Home extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loginForm:true\r\n    }\r\n    this.toggleForm = this.toggleForm.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n   \r\n  }\r\n  toggleForm(e){\r\n    e.preventDefault();\r\n    console.log('hello')\r\n    this.setState({\r\n      loginForm: !this.state.loginForm\r\n    })\r\n\r\n  }\r\n  render (){\r\n  \r\n  return (this.props.isLoggedIn) ?  <Redirect to ='/app' /> :     \r\n    <div className=\"MainContainer\">\r\n      <Header/>\r\n      { (this.state.loginForm === true) ?\r\n        <LoginForm \r\n          isLoggedIn = {this.props.isLoggedIn} \r\n          loginController = {this.props.loginController}\r\n          toggleForm = {this.toggleForm}\r\n        /> :\r\n        <SignupForm \r\n          toggleForm = {this.toggleForm}\r\n          loginController = {this.props.loginController}\r\n        />\r\n\r\n      \r\n      }\r\n      <Footer />\r\n    </div> \r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Button,Typography, Paper, Switch, LinearProgress,CircularProgress} from '@material-ui/core';\r\nimport {Edit, Delete,Save} from '@material-ui/icons';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst MySwitch = withStyles({\r\n    switchBase: {\r\n        color: 'red',\r\n        '&$checked': {\r\n          color: '#52d869'\r\n        },\r\n        '&$checked + $track': {\r\n          backgroundColor: '#52d869'\r\n        },\r\n      },\r\n      checked: {},\r\n      track: {\r\n        backgroundColor: \"red\",\r\n        opacity: .5\r\n      },\r\n})(Switch);\r\n\r\nconst EditTask = (props) => {\r\n    return (<textarea className = 'textarea'\r\n                name = \"description\"\r\n                id=\"\" \r\n                cols=\"\" \r\n                rows=\"\"\r\n                test = \"test\"\r\n                onChange = {(e) => {props.editTaskHandler(e, props.taskId)}}\r\n                defaultValue = {props.description} />  )\r\n}\r\n\r\n\r\n\r\n\r\nclass TaskList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render()\r\n        {   \r\n\r\n            const listAnimationClasses = 'listPaper'\r\n\r\n\r\n            const BtnStyle = {\r\n                background: '#1976D2',\r\n                color: '#fff'\r\n            }\r\n            const {editMode, _id,description, completed, switchLoading} = this.props.task;\r\n            const {saveEditHandler, editTask, deleteTask,editTaskHandler,handleTaskSwitchStatus} = this.props;\r\n\r\n        return (\r\n        <Paper className = {listAnimationClasses} square = {true} >\r\n            <div className = 'linearProgress'>{switchLoading &&<LinearProgress />}</div>      \r\n                 <li className = \"taskListHeader\">\r\n                    <div className=\"taskSwitchStatus\">\r\n                        <MySwitch \r\n                            checked = {completed}\r\n                            value = {!completed}\r\n                            onChange = {(e) => {handleTaskSwitchStatus(e,_id,'completed')}}\r\n                        />\r\n                        {(!switchLoading)  && <React.Fragment>{(completed) ? 'completed' : 'incomplete'}</React.Fragment>}\r\n                    </div>\r\n                    <div className=\"taskDescriptionContainer\">\r\n                        {   (editMode) ? \r\n                            <EditTask \r\n                                description = {description} \r\n                                editTaskHandler ={editTaskHandler}\r\n                                taskId = {_id}\r\n                            />:\r\n                            <div className=\"taskDescription\">\r\n                         \r\n                                <Typography variant=\"body1\" display=\"block\" gutterBottom>\r\n                                {description}\r\n                                </Typography>\r\n                            </div> \r\n\r\n                        }\r\n                    </div>\r\n                    <div className=\"taskButtonContainer\">\r\n                        {(editMode) ? \r\n                            <Button \r\n                                style = {BtnStyle}\r\n                                startIcon = {<Save />}\r\n                                variant=\"contained\"\r\n                                name = \"description\"\r\n                                className=\"taskButtons\" \r\n                                value ={_id}\r\n                                onClick = {(e) => {saveEditHandler(e)}}>save\r\n                            </Button>\r\n                            :\r\n                            <Button\r\n                                style = {BtnStyle}\r\n                                startIcon = {<Edit />}\r\n                                variant=\"contained\"\r\n                                className=\"taskButtons\" \r\n                                value ={_id} \r\n                                onClick= {(e) => {editTask(e)}}>\r\n                                 {(!this.props.editTaskIndicator) ? 'edit' : <CircularProgress className = \"addTaskSpinner\"/>}   \r\n                            </Button>\r\n                        }\r\n                        <Button\r\n                            color = \"secondary\"\r\n                            startIcon = {<Delete />}\r\n                            variant=\"contained\"\r\n                            className=\"taskButtons\" \r\n                            value ={_id}\r\n                            onClick = {(e) => {deleteTask(e)}}>delete\r\n                        </Button> \r\n \r\n                    </div>\r\n                </li>\r\n         </Paper>\r\n            )\r\n        }\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport {Button, CircularProgress, TextField} from '@material-ui/core';\r\n\r\n\r\nconst CreateTask = (props) => {\r\n    const BtnStyle = {\r\n        background: '#1976D2'\r\n    }\r\n    \r\n    return (\r\n        <div className = 'createTaskContainer'>\r\n            <form onSubmit = {(e) => {props.addTask(e)}}>\r\n                <TextField\r\n                label = \"Enter your new task\"\r\n                autoFocus = {true}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                onChange = {(e) => {props.createTask(e)}}\r\n                value={props.createDescription}\r\n                name =\"createDescription\" \r\n                type='text' \r\n                className = \"labelInput\"\r\n                />\r\n                 <div className=\"addTaskEffect\">\r\n                    <Button\r\n                        style = {BtnStyle}\r\n                        variant=\"contained\"\r\n                        color = \"primary\" \r\n                        onClick= {(e) => {props.addTask(e)}}\r\n                        disabled = {props.buttonDisable}>\r\n                        create new task \r\n                    </Button>\r\n                    {props.buttonDisable && <CircularProgress className = \"addTaskSpinner\"/>}\r\n                 </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask;","import React, {Component} from 'react';\r\nimport TaskList from './TaskList'\r\nimport CreateTask from './CreateTask'\r\nimport '../../css/task.scss'\r\nimport {apiBaseLink,getCookie} from '../../helper/helper'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport {Paper,Tabs,Tab } from '@material-ui/core'\r\n\r\nexport default class Task extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n        this.state = {\r\n            tasks: [],\r\n            createDescription: '',\r\n            buttonDisable: false,\r\n            tasksCount: null,\r\n            currentCount: 0,\r\n            limit: 5,\r\n            skip: 0,\r\n            tabIndexValue: 0,\r\n            loading: true,\r\n            editTaskIndicator: false\r\n\r\n        }\r\n        this.deleteTask = this.deleteTask.bind(this)\r\n        this.createTaskHandler = this.createTaskHandler.bind(this)\r\n        this.addTask = this.addTask.bind(this)\r\n        this.editTask = this.editTask.bind(this)\r\n        this.editTaskHandler = this.editTaskHandler.bind(this)\r\n        this.saveEditHandler = this.saveEditHandler.bind(this)\r\n        this.handleTaskSwitchStatus =this.handleTaskSwitchStatus.bind(this)\r\n        this.handleTabFilter = this.handleTabFilter.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        const parent = this;\r\n        const token = getCookie('token')\r\n        fetch(apiBaseLink + '/tasks/count', {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization' : `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let count = data.count\r\n            parent.setState({\r\n                tasksCount: count\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n\r\n        fetch(apiBaseLink + '/tasks?sortby=createdAt_desc', {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization' : `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data = data.map((value) => {\r\n                value.editMode = false\r\n                value.switchLoading = false\r\n                return value\r\n            })\r\n            parent.setState({\r\n                tasks: data,\r\n                loading: false\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    deleteTask(e){\r\n        e.preventDefault();\r\n        const id = e.currentTarget.value;\r\n        const parent = this;\r\n        const token = getCookie('token')\r\n        fetch(apiBaseLink + `/tasks/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('response', response)\r\n           return response.json()})\r\n        .then(data => {\r\n            const _id = data._id;\r\n            let tasksUpdated = [...parent.state.tasks]\r\n            tasksUpdated = tasksUpdated.filter((item) => {\r\n                return item._id !== _id\r\n            })\r\n            parent.setState({\r\n                tasks: [...tasksUpdated],\r\n                tasksCount: this.state.tasksCount - 1\r\n            })\r\n            parent.props.errorMessageHandler('add', 'successMessage', 'Task successfully deleted!!')\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    createTaskHandler(e){\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addTask(e){\r\n        e.preventDefault();\r\n        const parent = this;\r\n        this.setState({\r\n            buttonDisable: !this.state.buttonDisable\r\n        })\r\n        let task = this.state.createDescription.toString();\r\n        if(task !=='' && task.length > 0){\r\n           let data = {\r\n               description: this.state.createDescription\r\n           }\r\n           const token = getCookie('token');\r\n           fetch(apiBaseLink+`/tasks`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(data)\r\n           })\r\n           .then(response => response.json())\r\n           .then(data => {\r\n               parent.setState({\r\n                tasks: [data,...parent.state.tasks],\r\n                createDescription:'',\r\n                buttonDisable: !parent.state.buttonDisable,\r\n                tasksCount: this.state.tasksCount + 1,\r\n                tabIndexValue: 0\r\n               })\r\n               parent.props.errorMessageHandler('add', 'successMessage', 'Task successfully added!!')\r\n           })\r\n           .catch(error => console.log(error))\r\n        }\r\n        else{\r\n            this.setState({\r\n                buttonDisable: false\r\n            })\r\n           this.props.errorMessageHandler('add', 'errorMessage', 'Empty Task!!')\r\n        }\r\n        \r\n    }\r\n    editTask(e){\r\n        e.preventDefault();\r\n        const _id = e.currentTarget.value;\r\n        const tasksCopy =[...this.state.tasks] \r\n        const index = tasksCopy.findIndex(item => item._id === _id)\r\n        tasksCopy[index].editMode = true;\r\n        this.setState({\r\n            tasks: [...tasksCopy]\r\n        })\r\n    }\r\n    editTaskHandler(e,_id){\r\n        let name = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        const tasksCopy = [...this.state.tasks]\r\n        const index = tasksCopy.findIndex(item => item._id === _id);\r\n        tasksCopy[index][name] = value\r\n        this.setState({\r\n            tasks: [...tasksCopy]\r\n        })\r\n    }\r\n    saveEditHandler(e){\r\n        e.preventDefault();\r\n        const _id = e.currentTarget.value;\r\n        let name = e.currentTarget.name;\r\n        const tasksCopy = [...this.state.tasks]  \r\n        let item = tasksCopy.filter(item => item._id === _id)\r\n        item = {...item[0]}\r\n        const data = {\r\n            [name]: item[name]\r\n        }\r\n        const parent = this;\r\n        const token = getCookie('token')\r\n        fetch(apiBaseLink+`/tasks/${_id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n       })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let index = tasksCopy.findIndex(item => item._id === data._id)\r\n            tasksCopy[index] = data;\r\n            tasksCopy[index].editMode = false;\r\n            parent.setState({\r\n                tasks: [...tasksCopy]\r\n            })\r\n            parent.props.errorMessageHandler('add', 'successMessage', 'Task successfully updated!!')\r\n        }) //probly set state of this specific task again\r\n        .catch(error => console.log(error))\r\n    }\r\n    handleTaskSwitchStatus(e,id,statusName){\r\n      let nextValue = e.target.value;\r\n      const trueCheck = (nextValue.toLowerCase() === 'true')\r\n      const name = statusName;\r\n      const _id  = id;\r\n      const arrayCopy = [...this.state.tasks];\r\n      let index = arrayCopy.findIndex(item => item._id === _id)\r\n      let item = {...arrayCopy[index]}\r\n        item[name] = trueCheck\r\n        item.switchLoading = true;\r\n        arrayCopy[index] = item;\r\n        this.setState({\r\n            tasks: arrayCopy\r\n        })\r\n        const data = {\r\n            completed: trueCheck\r\n        }\r\n\r\n        const parent = this;\r\n        const token = getCookie('token')\r\n        fetch(apiBaseLink+`/tasks/${_id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n       })\r\n       .then(response => {\r\n           if(!response.status === 200){\r\n            item = {...arrayCopy[index]}\r\n            item[name] = !trueCheck\r\n            item.switchLoading = false;\r\n            arrayCopy[index] = item;\r\n            parent.setState({\r\n                tasks: arrayCopy\r\n            })\r\n           }\r\n           return response.json()\r\n       })\r\n       .then(data => {\r\n           data.switchLoading = false;\r\n           arrayCopy[index] = data;\r\n           if(parent.state.tabIndexValue === 0){\r\n             parent.setState({\r\n                tasks: [...arrayCopy]\r\n                   //also set the change of that swtich here by mapping\r\n               })\r\n           }\r\n           else{\r\n               parent.fetchDataHandler(parent.state.tabIndexValue)\r\n           }\r\n       })\r\n       .catch(error => console.log(error))\r\n\r\n       \r\n    }\r\n    handleTabFilter(e,tabValue){\r\n        \r\n        if(tabValue === this.state.tabIndexValue){\r\n            return\r\n        }\r\n        this.setState({\r\n            tabIndexValue: tabValue,\r\n            loading: true\r\n        })\r\n        this.fetchDataHandler(tabValue);\r\n    }\r\n    fetchDataHandler(tabValue){\r\n        let fetchBaseFilter;\r\n        const token = getCookie('token')\r\n        switch(tabValue){\r\n            case 0:\r\n                fetchBaseFilter = `${apiBaseLink}/tasks?sortby=createdAt_desc`;\r\n                break;\r\n            case 1: \r\n                fetchBaseFilter = `${apiBaseLink}/tasks?sortby=createdAt_desc&completed=true`;\r\n                break;\r\n            case 2: \r\n                fetchBaseFilter = `${apiBaseLink}/tasks?sortby=createdAt_desc&completed=false`;\r\n                break;\r\n        }\r\n        const parent = this;\r\n        let count;\r\n        fetch(apiBaseLink + '/tasks/count', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'authorization' : `Bearer ${token}` \r\n                }\r\n               \r\n                }      \r\n            )\r\n            .then(response => response.json())\r\n            .then(countno => {\r\n                    count = countno\r\n                    return fetch(fetchBaseFilter, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                        'authorization' : `Bearer ${token}` \r\n                    }\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                parent.setState({\r\n                    tasks: data,\r\n                    count: count,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n       \r\n    }\r\n    render(){\r\n        const {tasks} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <CreateTask \r\n                    createTask = {this.createTaskHandler} \r\n                    addTask = {this.addTask}\r\n                    buttonDisable = {this.state.buttonDisable}\r\n                    createDescription = {this.state.createDescription}\r\n                /> \r\n              <ul>\r\n              {/* //<li className = 'filterTab' > */}\r\n              <Paper className = 'filterTab'>\r\n                <li>\r\n                    <Tabs\r\n                        value= {this.state.tabIndexValue}\r\n                        onChange={this.handleTabFilter}\r\n                        TabIndicatorProps={\r\n                            {\r\n                                style: {\r\n                                    background: '#1976D2'\r\n                                }\r\n                            }\r\n                        }\r\n                        textColor=\"inherit\"\r\n                        centered\r\n                        >\r\n                            <Tab label=\"All\" />\r\n                            <Tab label=\"Completed\" />\r\n                            <Tab label=\"Incomplete\" />\r\n                    </Tabs>\r\n                </li>\r\n            </Paper>\r\n              {/* //</li> */}\r\n              <CSSTransitionGroup\r\n                    transitionName=\"example\"\r\n                    transitionEnterTimeout={500}\r\n                    transitionLeaveTimeout={300}>\r\n                {(() => {\r\n                    if(tasks.length !== 0 && this.state.loading === false){\r\n                        return tasks.map((item, i) => {\r\n                            return <TaskList \r\n                                            ref = {this.inputRef}\r\n                                            key ={item._id} \r\n                                            task = {item} \r\n                                            deleteTask={this.deleteTask} \r\n                                            editTask = {this.editTask}\r\n                                            editTaskHandler = {this.editTaskHandler}\r\n                                            saveEditHandler = {this.saveEditHandler}\r\n                                            handleTaskSwitchStatus = {this.handleTaskSwitchStatus}\r\n                                            editTaskIndicator= {this.state.editTaskIndicator}\r\n                                        />\r\n                        })\r\n                        }\r\n                        else if(this.state.loading === true){\r\n                            return <li className = \"empty loading\">Loading............</li>\r\n                        }\r\n                        else if((this.state.tasks.length === 0 && this.state.tabIndexValue === 1)){\r\n                            //set if not task data\r\n                          //return <li className = \"empty\">no task to display, create one</li> \r\n                          return <li className = \"empty\">not a single completed Task!!</li>\r\n                        }\r\n                        else if((this.state.tasks.length === 0 && this.state.tabIndexValue === 2)){\r\n                         return <li className = \"empty\">not a single incomplete Task!!</li>\r\n                        }\r\n                        else if(this.state.tasks.length === 0 && this.state.loading === false){\r\n                            return <li className = \"empty\">no task to display, create one</li> \r\n                        }\r\n                })()}\r\n                </CSSTransitionGroup>\r\n              </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {TextField, Button,CircularProgress} from '@material-ui/core'\r\n\r\nexport default class ProfileEdit extends Component {\r\n    render() {\r\n        const BtnStyle = {\r\n            background: '#1976D2'\r\n        }\r\n        const BtnStyleGreen = {\r\n            background: '#52d869'\r\n        }\r\n        return (\r\n            <div className ='profileEditContainer'>\r\n                <form onSubmit = {(e) => {this.props.handleProfileUpdate(e)}}>\r\n                    <TextField\r\n                        fullWidth\r\n                        disabled\r\n                        label=\"User_name\"\r\n                        defaultValue = {this.props.username}\r\n                        variant=\"outlined\"\r\n                        className = \"UserInput\"\r\n                    />\r\n                      <TextField\r\n                        fullWidth\r\n                        disabled\r\n                        defaultValue = {this.props.email}\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        className = \"UserInput\"\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        name = \"password\"\r\n                        label=\"New Password\"\r\n                        variant=\"outlined\"\r\n                        type = \"password\"\r\n                        className = \"UserInput\"\r\n                        onChange = {(e) => {this.props.handlePassword(e)}}\r\n                    />\r\n                    <TextField\r\n                        name = 'conformPassword'\r\n                        fullWidth\r\n                        label=\"Conform-New-Password\"\r\n                        variant=\"outlined\"\r\n                        type = \"password\"\r\n                        className = \"UserInput\"\r\n                        onChange = {(e) => {this.props.handlePassword(e)}}\r\n                    />\r\n                    <div className=\"addTaskEffectSpin\">\r\n                        <Button\r\n                            type = \"submit\"\r\n                            style = {BtnStyleGreen}\r\n                            variant=\"contained\"\r\n                            color = \"primary\" \r\n                            onClick= {(e) => {this.props.handleProfileUpdate(e)}}\r\n                            disabled = {this.props.profileSpinner}\r\n                        >\r\n                            save\r\n                        </Button>\r\n                        {(this.props.profileSpinner === true) ? <CircularProgress className = \"addTaskSpinnerSpin\"/>: null}\r\n                    </div>\r\n                    <Button\r\n                        style = {BtnStyle}\r\n                        variant=\"contained\"\r\n                        color = \"primary\" \r\n                        onClick= {(e) => {this.props.handleProfileEdit(e)}}\r\n                    >\r\n                        close\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport '../../css/error.scss';\r\n\r\nexport default class ErrorComponent extends React.Component{\r\n    render(){\r\n        const {messages} = this.props;\r\n        const messageArray = Object.keys(messages);\r\n        let backgroundColor;\r\n        if(messageArray[0] === 'errorMessage'){\r\n            backgroundColor = '#D32F2F'\r\n        }\r\n        else if(messageArray[0] === 'warningMessage'){\r\n            backgroundColor = '#FFA000'\r\n        }\r\n        else if (messageArray[0] === 'successMessage'){\r\n            backgroundColor = '#43A047' \r\n        }\r\n        \r\n        return (\r\n            <div className = \"errorComponent\" style = {{\r\n                backgroundColor: backgroundColor\r\n            }}>\r\n                    {messages[messageArray[0]]}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Task from './Task';\r\nimport Header from '../Home/Header';\r\nimport Footer from '../Home/Footer';\r\nimport ProfileEdit from './ProfileEdit';\r\nimport ErrorComponent from './ErrorComponent'\r\nimport {getCookie, apiBaseLink} from '../../helper/helper';\r\n\r\n// CSS\r\n//Icons\r\nimport{Icon} from 'antd';\r\nimport '../../css/loader.scss'\r\nexport default class Mainapp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.toggleRef = React.createRef();\r\n        this.state = {\r\n            user: {\r\n                _id: '',\r\n                email: '',\r\n                name: '',\r\n                profileChange: false,\r\n                password: '',\r\n                conformPassword: ''\r\n            },\r\n            loading: true,\r\n            userLoaded: false,\r\n            profileToggle: false,\r\n            profileSpinner: false,\r\n\r\n            messages:  {}\r\n\r\n        }\r\n        this.logoutHandler = this.logoutHandler.bind(this)\r\n        this.toggleHandler = this.toggleHandler.bind(this)\r\n        this.outsideClickhandler =this.outsideClickhandler.bind(this)\r\n        this.handleProfileEdit = this.handleProfileEdit.bind(this)\r\n        this.handleProfileUpdate = this.handleProfileUpdate.bind(this)\r\n        this.handlePassword = this.handlePassword.bind(this)\r\n        this.deleteAccountHandler = this.deleteAccountHandler.bind(this)\r\n        this.errorMessageHandler = this.errorMessageHandler.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        const parent = this;\r\n        const token = getCookie('token').trim();\r\n        \r\n        fetch(apiBaseLink+'/users/me', {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const user = {...parent.state.user}\r\n            user._id = data._id;\r\n            user.name = data.name;\r\n            user.email = data.email;\r\n            parent.setState({\r\n                user: user,\r\n                loading: false,\r\n                userLoaded: true\r\n            })\r\n          \r\n           \r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    logoutHandler(e){\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const token = getCookie('token')\r\n        const parent = this;\r\n        fetch(`${apiBaseLink}/users/${name}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                parent.setState({\r\n                    userLoaded: false,\r\n                    loading: true\r\n                })\r\n                parent.props.logoutController();\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    toggleHandler(){\r\n        if(this.state.profileToggle === false){\r\n            window.addEventListener('click', this.outsideClickhandler, false)\r\n        }\r\n        else if(this.state.profileToggle === true){\r\n            window.removeEventListener('click', this.outsideClickhandler, false)\r\n        }\r\n         this.setState({\r\n            profileToggle: !this.state.profileToggle\r\n         })\r\n           \r\n    }\r\n    outsideClickhandler(e){\r\n        if(this.toggleRef.current.contains(e.target)){\r\n            return\r\n        }\r\n        this.toggleHandler();\r\n    }\r\n    handleProfileEdit(e){\r\n        if(e){\r\n            e.preventDefault();\r\n        }\r\n        const userCopy = {...this.state.user}\r\n        userCopy.profileChange = !this.state.user.profileChange\r\n        this.setState({\r\n           user: {...userCopy}\r\n        })\r\n    }\r\n    handlePassword(e){\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const userCopy = {...this.state.user}\r\n        userCopy[name] = value\r\n\r\n        this.setState({\r\n            user: {...userCopy}\r\n        })\r\n    }\r\n    handleProfileUpdate(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            profileSpinner: true\r\n        })\r\n        if(this.state.user.password.toString().trim().length === 0 ){\r\n            //errpr Message that passwords do not match\r\n            this.setState({\r\n                profileSpinner: false\r\n            })\r\n            this.errorMessageHandler('add','warningMessage', 'empty password field !!')\r\n            return;\r\n        }\r\n        else if((this.state.user.password.toString().trim() !== this.state.user.conformPassword.toString().trim())){\r\n            this.setState({\r\n                profileSpinner: false\r\n            })\r\n            this.errorMessageHandler('add','warningMessage', 'passwords do not match !!')\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            password : this.state.user.password\r\n        }\r\n        const token = getCookie('token')\r\n        const parent = this;\r\n\r\n        fetch(`${apiBaseLink}/users/me`,{\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // displaySuccessMessage\r\n            parent.setState({\r\n                password: '',\r\n                conformPassword: '',\r\n                profileSpinner: false\r\n            })\r\n            parent.errorMessageHandler('add','successMessage', 'password successfully updated!!')\r\n            this.handleProfileEdit();\r\n            console.log(data)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    deleteAccountHandler(e){\r\n        this.toggleHandler();\r\n        if(e){\r\n            e.preventDefault();\r\n        }\r\n        const token = getCookie('token')\r\n        if(window.confirm('are you sure you want to permanently delete your account')){\r\n            fetch(`${apiBaseLink}/users/me`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log( message)\r\n            })\r\n            .catch(error => console.log(error))\r\n        }\r\n        \r\n    }\r\n\r\n    //-------------------------------------------------------------------->\r\n    errorMessageHandler(action, messageType, message){\r\n        console.log('MessageType',messageType)\r\n        console.log(\"message\", message)\r\n\r\n        const messageCopy = {...this.state.messages}\r\n        messageCopy[messageType] = message\r\n        this.setState({\r\n            messages: {...messageCopy}\r\n        })\r\n        setTimeout(()=> {\r\n            this.setState({\r\n                messages: {}\r\n            })\r\n        },2000)\r\n    }\r\n\r\n    render(){\r\n        const UserInfo = (  \r\n            <div className=\"userInfo\" ref={this.toggleRef} >\r\n                <div className=\"profileIcon\" onClick = {this.toggleHandler}>\r\n                    <Icon type=\"user\" /> \r\n                    {this.state.profileToggle &&\r\n                        <ul className = \"menuListUl\">  \r\n                            <li \r\n                                className = \"menuList\">\r\n                                    <button onClick = {this.handleProfileEdit}>Edit Profile</button>\r\n                            </li>\r\n                            <li \r\n                                className = \"menuList\">\r\n                                    <button name = 'logout' onClick = {this.logoutHandler} >logout</button>\r\n                            </li>\r\n                            <li \r\n                                className = \"menuList\">\r\n                                    <button name = 'logoutall' onClick = {this.logoutHandler}>logout from all devices</button>\r\n                            </li>\r\n                            <li \r\n                                className = \"menuList\">\r\n                                    <button className = \"AccountDelete\" onClick = {this.deleteAccountHandler}>delete account</button>\r\n                            </li>\r\n                            <li \r\n                                className = \"menuList\">\r\n                                    <button className = \"menuCloseBtn\" onClick = {this.toggleHandler}>close menu</button>\r\n                            </li>\r\n                        </ul>\r\n                    }\r\n                </div>\r\n                <div className=\"userName\">\r\n                    <h1>{this.state.user.name}</h1>\r\n                </div>               \r\n            </div>\r\n            )\r\n  \r\n        return(\r\n            <div className = 'MainContainer'>\r\n                <Header>\r\n                    {(this.state.userLoaded) ? UserInfo : ''}\r\n                </Header>\r\n                <div className=\"TaskContainer\">\r\n                    {(this.state.user.profileChange === true) ? \r\n                        <ProfileEdit \r\n                            handleProfileEdit = {this.handleProfileEdit}\r\n                            username = {this.state.user.name}\r\n                            email = {this.state.user.email}\r\n                            profileSpinner = {this.state.profileSpinner}\r\n                            handleProfileUpdate = {this.handleProfileUpdate}\r\n                            handlePassword = {this.handlePassword}\r\n                        />\r\n                        : \r\n                        null\r\n                    }\r\n                    {(this.state.loading) ?\r\n                         <div className = \"loadingg\"> Loading.... </div>:  \r\n                         <Task \r\n                            user = {this.state.user} \r\n                            handleProfileEdit = {this.handleProfileEdit}\r\n                            errorMessageHandler = {this.errorMessageHandler}\r\n                        />}\r\n                </div>\r\n                {(Object.keys(this.state.messages).length > 0) && <ErrorComponent messages = {this.state.messages}/>}\r\n                {(this.state.loading) ? ' ' : <Footer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nimport {Authentication} from '../helper/helper'\r\n\r\nconst ProtectedRoute = ({component: Component, logoutController ,...rest}) => (\r\n    <Route {...rest} render={(props) => (\r\n       Authentication.loggedIn === true\r\n          ? <Component {...props}  logoutController = {logoutController}/>\r\n          : <Redirect to= '/' />\r\n      )} />\r\n)\r\n\r\nexport default ProtectedRoute;\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch,Route} from 'react-router-dom';\r\nimport './css/body.scss'\r\nimport Home from './Component/Home/Home';\r\nimport Mainapp from './Component/App/Mainapp'\r\nimport ProtectedRoute from './Protected/ProtectedRoute';\r\n\r\n\r\nimport {Authentication, getCookie, apiBaseLink} from './helper/helper';\r\n\r\nexport default class App extends Component{\r\n constructor(props){\r\n   super(props);\r\n   this.state = {\r\n     isLoggedIn: false, //set based on token later\r\n     redirectToApp: false,\r\n     loading: true\r\n   }\r\n   this.loginController = this.loginController.bind(this)\r\n   this.logoutController = this.logoutController.bind(this)\r\n }\r\n componentDidMount(){\r\n    const initAuthCheck = Authentication.isLoggedIn();\r\n    if(initAuthCheck){\r\n      const token = getCookie('token');\r\n      const parent = this;\r\n      fetch(apiBaseLink+'/users/me', {\r\n        method: 'GET',\r\n        headers: {\r\n            'authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if(response.ok){\r\n          parent.setState({\r\n            isLoggedIn: true,\r\n            redirectToApp: true,\r\n            loading: false\r\n          })\r\n        }\r\n        else{\r\n          parent.setState({\r\n            loading: false\r\n          })\r\n        }\r\n      })\r\n    }\r\n }\r\n\r\n loginController(){\r\n   this.setState({\r\n     isLoggedIn: true,\r\n     redirectToApp: true,\r\n     loading: false\r\n   })\r\n }\r\nlogoutController(){\r\n  Authentication.isLoggedOut();\r\n  this.setState({\r\n    isLoggedIn: false, //set based in token later\r\n    redirectToApp: false\r\n  })\r\n}\r\n render(){\r\n   return (\r\n     (this.state.loading) ? 'loading ...' : \r\n     <BrowserRouter>\r\n        <div className = \"wholeContainer\"> \r\n          <Switch>\r\n            <Route exact \r\n              path='/' \r\n              render = {(props) => <Home {...props}\r\n                                        isLoggedIn = {this.state.isLoggedIn} \r\n                                        loginController = {this.loginController}\r\n                                        />} />\r\n            <ProtectedRoute path ='/app' logoutController = {this.logoutController} component = {Mainapp} />\r\n            <Route component = {() => {\r\n              return <h1>This page Does not exist!!</h1>\r\n            }} />\r\n          </Switch>\r\n        </div>\r\n     </BrowserRouter>\r\n     \r\n   )\r\n }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}